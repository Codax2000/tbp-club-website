{"version":3,"sources":["img/pics/DiscordLogo.png","components/NavMenu.js","img/mugshots/Adam_Margot.JPG","components/home/HomePage.js","components/calendar/Calendar.js","components/about/OfficerAbout.js","components/about/About.js","img/mugshots/Knowlton_Alex.JPG","img/mugshots/Walenta_Madison.JPG","img/mugshots/Kwek_Kai.JPG","img/mugshots/Deruyter_Nathan.JPG","img/mugshots/Zhou_Steven.jpg","App.js","serviceWorker.js","index.js"],"names":["NavMenu","Container","Navbar","className","bg","expand","Toggle","aria-controls","Collapse","id","Nav","Link","href","target","height","src","discordImage","alt","HomePage","Jumbotron","fluid","data","welcome","announcements","important","map","item","i","regular","Calendar","title","style","border","width","frameborder","scrolling","OfficerAbout","props","position","name","year","major","elevatorPitch","photo","pics","About","about","officers","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.55c7a17a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/DiscordLogo.0c2f7924.png\";","/**\r\n * Alex Knowlton\r\n * 8/17/2022\r\n *\r\n * Standard navbar for the entire site. Consists of links to other\r\n * parts of the site. Check App.js to make sure that the links are\r\n * valid.\r\n */\r\nimport React from \"react\";\r\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\r\nimport discordImage from \"../img/pics/DiscordLogo.png\"\r\n\r\nexport default function NavMenu() {\r\n\r\n  let height = 24;\r\n\r\n  return (\r\n\t\t<Container>\r\n\t\t\t<Navbar className=\"navbar\" bg=\"light\" expand=\"md\">\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t<Nav.Link href=\"#/\">Home</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"#/calendar\">Calendar</Nav.Link>\r\n\t\t\t\t\t\t{/* <Nav.Link href=\"#/about\">About Us</Nav.Link> */}\r\n\t\t\t\t\t\t<Nav.Link href=\"mailto:tbp@uw.edu\">Contact Us</Nav.Link>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t\t<Nav.Link\r\n\t\t\t\t\t\thref=\"https://discord.gg/WbyC4aYWz7\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tid=\"nav-image\"\r\n\t\t\t\t\t\t\theight={height}\r\n\t\t\t\t\t\t\tsrc={discordImage}\r\n\t\t\t\t\t\t\talt=\"Our Discord Invite\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Nav.Link>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t</Container>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Adam_Margot.9eb01537.JPG\";","import React from 'react';\r\nimport { Jumbotron, Container } from 'react-bootstrap';\r\nimport data from \"./data.json\";\r\nimport shoutout from \"../../img/mugshots/Adam_Margot.JPG\"\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <Container>\r\n      <Jumbotron fluid className=\"background-primary d-flex align-items-center\">\r\n        <Container>\r\n          <h2>{data.welcome[0]}</h2>\r\n          <p>{data.welcome[1]}</p>\r\n        </Container>\r\n      </Jumbotron>\r\n      <div className=\"background-highlight highlight-divider\">\r\n        no text\r\n      </div>\r\n      <Container className=\"background-secondary home-container-vertical home-container horizontal\">\r\n        <h2>Announcements</h2>\r\n        {data.announcements.important.map((item, i) => <p className=\"bold\" key={i}>{item}</p>)}\r\n        {data.announcements.regular.map((item, i) => <p key={i}>{item}</p>)}\r\n      </Container>\r\n      {/* <Container className=\"background-secondary home-container-vertical home-container horizontal\">\r\n        <h2>Weekly Shoutout</h2>\r\n        <div className=\"d-flex align-items-start\">\r\n          <div>\r\n            <img className=\"headshot\" alt=\"Margot's Mugshot\" src={shoutout} />\r\n          </div>\r\n          <div>\r\n            <h4>{data.shoutout.name}</h4>\r\n            {data.shoutout.about.map((item, i) => <p key={i}>{item}</p>)}\r\n          </div>\r\n        </div>\r\n      </Container> */}\r\n      <Container className=\"background-secondary home-container-vertical home-container horizontal\">\r\n        <h2>Connect With Us!</h2>\r\n        <p>Email: <a href=\"tbp@uw.edu\">tbp@uw.edu</a></p>\r\n        <p>Discord: <a href=\"https://discord.gg/HG47D5J6Xu\">Discord Invite</a> </p>\r\n      </Container>\r\n    </Container>\r\n  )\r\n\r\n}\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap';\r\nexport default function Calendar() {\r\n  return (\r\n    <Container className=\"p-3 text-center\">\r\n      <iframe title=\"Google Calendar\" src=\"https://calendar.google.com/calendar/embed?src=tbpeng%40uw.edu&ctz=America%2FLos_Angeles\" style={{border: 0}} width=\"1000\" height=\"750\" frameborder=\"0\" scrolling=\"no\"></iframe>\r\n    </Container>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport default function OfficerAbout(props) {\r\n  let {position, name, year, major, elevatorPitch, photo} = props;\r\n  return (\r\n    <Container className=\"home-container-vertical home-container-horizontal background-secondary\">\r\n      <h2>{position}</h2>\r\n      <div className=\"d-flex align-items-start\">\r\n        <div>\r\n          <img className=\"headshot\" alt={name} src={photo} />\r\n        </div>\r\n        <div>\r\n          <h3>{name}</h3>\r\n          <h4>{year}, {major}</h4>\r\n          {elevatorPitch.map((item, i) => <p key={i}>{item}</p>)}\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}","/**\r\n * Alex Knowlton\r\n * 8/17/2022\r\n * \r\n * The section of the website devoted to the \"About Us\" materials. \r\n */\r\n\r\nimport React from 'react'\r\nimport OfficerAbout from './OfficerAbout';\r\nimport data from \"./data.json\";\r\nimport { Container, Jumbotron } from 'react-bootstrap';\r\n\r\nimport president from \"../../img/mugshots/Knowlton_Alex.JPG\";\r\nimport vicePresident from \"../../img/mugshots/Walenta_Madison.JPG\";\r\nimport treasurer from \"../../img/mugshots/Kwek_Kai.JPG\";\r\nimport recordingSecretary from  \"../../img/mugshots/Deruyter_Nathan.JPG\";\r\nimport correspondingSecretary from \"../../img/mugshots/Zhou_Steven.jpg\";\r\n\r\nlet pics = [president, vicePresident, treasurer, recordingSecretary, correspondingSecretary];\r\n\r\nexport default function About() {\r\n  return (\r\n    <Container>\r\n      <Jumbotron fluid className=\"background-primary d-flex align-items-center\">\r\n        <Container>\r\n          <h2>About Us</h2>\r\n        </Container>\r\n      </Jumbotron>\r\n      <div className=\"background-highlight highlight-divider\">\r\n        no text\r\n      </div>\r\n      <div>\r\n        <Container className=\"home-container-horizontal background-secondary pt-5\">\r\n          <p>{data.about}</p>\r\n        </Container>\r\n        {data.officers.map((item, i) => \r\n          <OfficerAbout \r\n            position={item.position}\r\n            name={item.name}\r\n            year={item.year}\r\n            major={item.major}\r\n            photo={pics[i]}\r\n            elevatorPitch={item[\"elevator-pitch\"]}\r\n          />)\r\n        }\r\n      </div>\r\n    </Container>\r\n    \r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Knowlton_Alex.a28899f9.JPG\";","export default __webpack_public_path__ + \"static/media/Walenta_Madison.f0fd6214.JPG\";","export default __webpack_public_path__ + \"static/media/Kwek_Kai.e2e1a593.JPG\";","export default __webpack_public_path__ + \"static/media/Deruyter_Nathan.e3403061.JPG\";","export default __webpack_public_path__ + \"static/media/Zhou_Steven.b12dd95f.jpg\";","/**\r\n * Alex Knowlton\r\n * 8/17/2022\r\n *\r\n * Main page for the website. Routes to different projects using\r\n * React-Router, and has a standard nav menu and footer. Gives the\r\n * impression of multiple webpages.\r\n */\r\n\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NavMenu from \"./components/NavMenu\";\r\nimport HomePage from \"./components/home/HomePage\";\r\nimport Calendar from \"./components/calendar/Calendar\";\r\nimport About from \"./components/about/About\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavMenu />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={HomePage} />\r\n        <Route path=\"/calendar\" exact component={Calendar} />\r\n        <Route path=\"/about\" exact component={About} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router basename={`/${process.env.PUBLIC_URL}`}>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}